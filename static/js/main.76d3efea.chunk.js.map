{"version":3,"sources":["constants.js","components/Header.js","color.js","components/Tile.js","colors.js","components/Game.js","components/Title.js","components/Button.js","components/WinOverlay.js","components/App.js","index.js","registerServiceWorker.js"],"names":["Z_INDICES","COLORS","MODE_LABELS","PUZZLE","ZEN","Container","styled","div","_templateObject","Button","_templateObject2","props","active","Chevron","span","_templateObject3","DropdownOverlay","_templateObject4","DropdownMenu","_templateObject5","MenuItem","_templateObject6","RightSide","_templateObject7","Header","_ref","hasWon","height","mode","showMistakes","onNewGame","onToggleShowMistakes","_useState","useState","_useState2","Object","slicedToArray","modeDropdownOpen","setModeDropdownOpen","react_default","a","createElement","style","onClick","react","onTouchStart","onTouchEnd","interpolate","topLeft","topRight","bottomLeft","bottomRight","x","xTotal","y","yTotal","left","chroma","scale","colors","right","Tile_templateObject","Dot","Tile_templateObject2","memo","id","isResizing","color","locked","lastTouched","selected","showMistake","width","top","onMouseDown","web","to","config","tension","friction","clamp","immediate","_ref2","Tile_Container","Math","round","backgroundColor","zIndex","transform","evt","preventDefault","touches","clientX","clientY","opacity","prevProps","nextProps","every","key","niceColors","Game_templateObject","getRandomColors","num","_loop","sample","c","deltaE","push","length","getRandomArray","arr","i","shuffle","isCorrect","tile","iFinal","j","jFinal","swapTiles","_ref4","tiles","id1","id2","tile1","find","tile2","map","objectSpread","Game","_ref7","horizontalTiles","verticalTiles","onResetResizing","onWin","containerRef","useRef","boardDimensions","setBoardDimensions","_useState3","_useState4","setTiles","_useState5","_useState6","activeTileId","setActiveTileId","_useState7","_useState8","lastTouchedTileId","setLastTouchedTileId","_useState9","_useState10","tileOffset","setTileOffset","_useState11","_useState12","startPosition","setStartPosition","_useState13","_useState14","hasDragged","setHasDragged","_useState15","_useState16","selectedTileId","setSelectedTileId","_useState17","_useState18","dragPosition","setDragPosition","tileWidth","tileHeight","useLayoutEffect","_getRandomColors","_getRandomColors2","randoms","index","randomIndex","floor","getInitialZenTiles","_getRandomColors3","_getRandomColors4","lockedPositions","take","random","_loop2","_loop3","some","coord","reduce","newTiles","tileInPosition","correctTile","getInitialPuzzleTiles","calculateDimensions","_containerRef$current","current","getBoundingClientRect","window","addEventListener","removeEventListener","handleMouseDown","_ref8","handleMouseMove","_ref9","pow","overTile","_ref3","findTile","handleMouseUp","Game_Container","ref","onTouchMove","onMouseMove","onMouseUp","components_Tile","FONT_SIZES","1","2","LINE_HEIGHTS","Title","Title_templateObject","level","Button_templateObject","Button_templateObject2","Overlay","WinOverlay_templateObject","WinOverlay","components_Title","components_Button","App_templateObject","GameContainer","App_templateObject2","Version","App_templateObject3","App","containerDimensions","setContainerDimensions","horizontal","vertical","tileCounts","setTileCounts","gameId","setGameId","_useMode","localStorage","getItem","setMode","modeToSave","setItem","useMode","_useMode2","setHasWon","setShowMistakes","setIsResizing","gameHeight","gameWidth","horizontalPadding","handleResize","handleNewGame","App_Container","components_Header","padding","concat","components_Game","components_WinOverlay","entries","obj","ownProps","keys","resArray","Array","render","components_App","document","getElementById","navigator","swUrl","process","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","catch","error"],"mappings":"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","file":"static/js/main.76d3efea.chunk.js","sourcesContent":["export const Z_INDICES = {\n  winOverlay: 90,\n  dropdown: 100\n};\n\nexport const COLORS = {\n  appBackground: \"#111\",\n  appText: \"#aaa\",\n  appTextActive: \"#fff\",\n  dropdownActiveBackground: \"#111\",\n  dropdownActiveText: \"#fff\"\n};\n","import React, { useState, Fragment } from \"react\";\nimport styled from \"styled-components\";\nimport { Z_INDICES, COLORS } from \"../constants\";\n\nconst MODE_LABELS = {\n  PUZZLE: \"Puzzle Mode\",\n  ZEN: \"Zen Mode\"\n};\n\nconst Container = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 0 15px;\n  color: ${COLORS.appText};\n  user-select: none;\n`;\n\nconst Button = styled.div`\n  color: ${props => (props.active ? COLORS.appTextActive : \"inherit\")};\n\n  &:active {\n    color: ${COLORS.appTextActive};\n  }\n\n  & + & {\n    margin-left: 15px;\n  }\n`;\n\nconst Chevron = styled.span`\n  &:before {\n    border-style: solid;\n    border-width: 1px 1px 0 0;\n    border-color: ${props => (props.active ? \"#aaa\" : \"#888\")};\n    content: \"\";\n    display: inline-block;\n    height: 6px;\n    width: 6px;\n    vertical-align: top;\n    margin-top: 3px;\n    margin-left: 5px;\n    transform: rotate(135deg);\n  }\n`;\n\nconst DropdownOverlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  z-index: ${Z_INDICES.dropdown};\n`;\n\nconst DropdownMenu = styled.div`\n  box-sizing: border-box;\n  width: 140px;\n  position: absolute;\n  background-color: #fff;\n  color: #333;\n  z-index: ${Z_INDICES.dropdown};\n  padding: 4px;\n  margin-top: 10px;\n  margin-left: -10px;\n  border-radius: 2px;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.2);\n  border: 1px solid rgba(0, 0, 0, 0.1);\n  background-clip: padding-box;\n`;\n\nconst MenuItem = styled.div`\n  height: 40px;\n  display: flex;\n  align-items: center;\n  padding: 0 15px;\n  background-color: ${props =>\n    props.active ? COLORS.dropdownActiveBackground : \"transparent\"};\n  color: ${props => (props.active ? COLORS.dropdownActiveText : \"inherit\")};\n  border-radius: 2px;\n`;\n\nconst RightSide = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nconst Header = ({\n  hasWon,\n  height,\n  mode,\n  showMistakes,\n  onNewGame,\n  onToggleShowMistakes\n}) => {\n  const [modeDropdownOpen, setModeDropdownOpen] = useState(false);\n\n  return (\n    <Container style={{ height }}>\n      <div>\n        <Button\n          active={modeDropdownOpen}\n          onClick={() => {\n            setModeDropdownOpen(!modeDropdownOpen);\n          }}\n        >\n          {MODE_LABELS[mode]} <Chevron active={modeDropdownOpen} />\n        </Button>\n        {modeDropdownOpen && (\n          <Fragment>\n            <DropdownOverlay\n              onClick={() => {\n                setModeDropdownOpen(false);\n              }}\n            />\n            <DropdownMenu>\n              <MenuItem\n                active={mode === \"ZEN\"}\n                onClick={() => {\n                  setModeDropdownOpen(false);\n                  if (mode === \"ZEN\") return;\n                  onNewGame({ mode: \"ZEN\" });\n                }}\n              >\n                Zen Mode\n              </MenuItem>\n              <MenuItem\n                active={mode === \"PUZZLE\"}\n                onClick={() => {\n                  setModeDropdownOpen(false);\n                  if (mode === \"PUZZLE\") return;\n                  onNewGame({ mode: \"PUZZLE\" });\n                }}\n              >\n                Puzzle Mode\n              </MenuItem>\n            </DropdownMenu>\n          </Fragment>\n        )}\n      </div>\n      <RightSide>\n        {mode === \"PUZZLE\" && !hasWon && (\n          <Button\n            onTouchStart={() => {\n              if (!showMistakes) {\n                onToggleShowMistakes();\n              }\n            }}\n            onTouchEnd={() => {\n              if (showMistakes) {\n                onToggleShowMistakes();\n              }\n            }}\n          >\n            Show Mistakes\n          </Button>\n        )}\n        <Button\n          onClick={() => {\n            onNewGame({ mode });\n          }}\n        >\n          New Game\n        </Button>\n      </RightSide>\n    </Container>\n  );\n};\n\nexport default Header;\n","import chroma from \"chroma-js\";\n\nexport const interpolate = ({\n  topLeft,\n  topRight,\n  bottomLeft,\n  bottomRight,\n  x,\n  xTotal,\n  y,\n  yTotal\n}) => {\n  const left = chroma\n    .scale([topLeft, bottomLeft])\n    .mode(\"lab\")\n    .colors(yTotal)[y];\n  const right = chroma\n    .scale([topRight, bottomRight])\n    .mode(\"lab\")\n    .colors(yTotal)[y];\n  return chroma\n    .scale([left, right])\n    .mode(\"lab\")\n    .colors(xTotal)[x];\n};\n","import React, { memo } from \"react\";\nimport styled from \"styled-components\";\nimport { Spring } from \"react-spring\";\n\nconst Container = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  position: absolute;\n  user-select: none;\n  transition: transform 0.15s ease-in-out;\n`;\n\nconst Dot = styled.div`\n  border-radius: 3px;\n  width: 6px;\n  height: 6px;\n  background-color: #fff;\n  transition: opacity 0.3s ease-in-out;\n`;\n\nconst Tile = ({\n  id,\n  isResizing,\n  active,\n  color,\n  hasWon,\n  locked,\n  height,\n  lastTouched,\n  selected,\n  showMistake,\n  width,\n  left,\n  top,\n  onMouseDown\n}) => (\n  <Spring\n    to={{ left, top }}\n    config={{\n      tension: 1800,\n      friction: 100,\n      clamp: true\n    }}\n    immediate={isResizing || active}\n  >\n    {({ left, top }) => (\n      <Container\n        style={{\n          left: Math.round(left),\n          top: Math.round(top),\n          backgroundColor: color,\n          width,\n          height,\n          zIndex: active ? 3 : lastTouched ? 2 : locked ? 0 : 1,\n          transform: selected ? \"scale(0.85, 0.85)\" : null\n        }}\n        onTouchStart={evt => {\n          evt.preventDefault();\n          onMouseDown({\n            id,\n            x: evt.touches[0].clientX,\n            y: evt.touches[0].clientY\n          });\n        }}\n        onMouseDown={evt => {\n          onMouseDown({ id, x: evt.clientX, y: evt.clientY });\n        }}\n      >\n        <Dot style={{ opacity: locked && !active && !hasWon ? 0.25 : 0 }} />\n        {showMistake && <span>&times;</span>}\n      </Container>\n    )}\n  </Spring>\n);\n\nconst areEqual = (prevProps, nextProps) =>\n  [\n    \"id\",\n    \"color\",\n    \"hasWon\",\n    \"isResizing\",\n    \"top\",\n    \"left\",\n    \"active\",\n    \"selected\",\n    \"lastTouched\",\n    \"locked\",\n    \"showMistake\",\n    \"width\",\n    \"height\"\n  ].every(key => prevProps[key] === nextProps[key]);\n\nexport default memo(Tile, areEqual);\n","// import chroma from \"chroma-js\";\n// import sortBy from \"lodash/sortBy\";\nexport const niceColors = [\n  \"#cd5c5c\",\n  \"#bc8f8f\",\n  \"#e31f16\",\n  \"#be0e01\",\n  \"#ffe4e1\",\n  \"#fa8072\",\n  \"#df5f4b\",\n  \"#fbc8c0\",\n  \"#f09a8b\",\n  \"#fb8960\",\n  \"#e0beaf\",\n  \"#fb6800\",\n  \"#f4a460\",\n  \"#eb9348\",\n  \"#ffe4c4\",\n  \"#ff8c00\",\n  \"#deb887\",\n  \"#d2b48c\",\n  \"#f3d7a7\",\n  \"#ffe4b5\",\n  \"#faeac8\",\n  \"#ffc33f\",\n  \"#ecbe48\",\n  \"#e9f88f\",\n  \"#a4d273\",\n  \"#3b9120\",\n  \"#26d01b\",\n  \"#90ee90\",\n  \"#3b3e3b\",\n  \"#aeedb7\",\n  \"#05681d\",\n  \"#044715\",\n  \"#2e8b57\",\n  \"#598b73\",\n  \"#5db89c\",\n  \"#3f9489\",\n  \"#b6e3df\",\n  \"#729f9d\",\n  \"#008080\",\n  \"#2f4f4f\",\n  \"#5f9ea0\",\n  \"#90d4d8\",\n  \"#67d3ea\",\n  \"#006c8f\",\n  \"#006c8f\",\n  \"#00bfff\",\n  \"#456775\",\n  \"#4e96bf\",\n  \"#6a91ab\",\n  \"#1e90ff\",\n  \"#cdc7f8\",\n  \"#483d8b\",\n  \"#d8bfd8\",\n  \"#d280bc\",\n  \"#de70ba\",\n  \"#cb3b6f\",\n  \"#58323d\",\n  \"#e74d71\",\n  \"#dc143c\",\n  \"#f39aaa\",\n  \"#ffc0cb\",\n  \"#dcdcdc\",\n  \"#c0c0c0\",\n  \"#808080\"\n];\n\n// console.log(\n//   JSON.stringify(sortBy(niceColors, hex => chroma(hex).get(\"hsl.h\")))\n// );\n","import React, { useLayoutEffect, useRef, useState } from \"react\";\nimport styled from \"styled-components\";\nimport chroma from \"chroma-js\";\nimport clamp from \"lodash/clamp\";\nimport sample from \"lodash/sample\";\nimport shuffle from \"lodash/shuffle\";\nimport take from \"lodash/take\";\nimport { interpolate } from \"../color\";\nimport Tile from \"./Tile\";\nimport { niceColors } from \"../colors\";\n\nconst SIMILARITY_THRESHOLD = 10;\n\nconst Container = styled.div`\n  position: relative;\n`;\n\nconst getRandomColors = num => {\n  const selected = [];\n\n  while (selected.length < num) {\n    const color = sample(niceColors);\n    if (selected.every(c => chroma.deltaE(c, color) > SIMILARITY_THRESHOLD)) {\n      selected.push(color);\n    }\n  }\n\n  return selected;\n};\n\nconst getRandomArray = length => {\n  const arr = [];\n  for (let i = 0; i < length; i++) {\n    arr.push(i);\n  }\n  return shuffle(arr);\n};\n\nconst isCorrect = tile => tile.i === tile.iFinal && tile.j === tile.jFinal;\n\nconst getInitialZenTiles = ({ horizontalTiles, verticalTiles }) => {\n  const tiles = [];\n  const [topLeft, topRight, bottomLeft, bottomRight] = getRandomColors(4);\n  const randoms = getRandomArray(horizontalTiles * verticalTiles);\n\n  for (let i = 0; i < horizontalTiles; i++) {\n    for (let j = 0; j < verticalTiles; j++) {\n      const index = j * horizontalTiles + i;\n      const randomIndex = randoms[index];\n      const tile = {\n        id: index + 1,\n        iFinal: i,\n        jFinal: j,\n        i: randomIndex % horizontalTiles,\n        j: Math.floor(randomIndex / horizontalTiles),\n        color: interpolate({\n          topLeft,\n          topRight,\n          bottomLeft,\n          bottomRight,\n          x: i,\n          xTotal: horizontalTiles,\n          y: j,\n          yTotal: verticalTiles\n        })\n      };\n\n      tiles.push({\n        ...tile,\n        locked: isCorrect(tile)\n      });\n    }\n  }\n\n  return tiles;\n};\n\nconst getInitialPuzzleTiles = ({ horizontalTiles, verticalTiles }) => {\n  const tiles = [];\n  const [topLeft, topRight, bottomLeft, bottomRight] = getRandomColors(4);\n  const randoms = getRandomArray(horizontalTiles * verticalTiles);\n  const lockedPositions = take(randoms, 4).map(random => [\n    random % horizontalTiles,\n    Math.floor(random / horizontalTiles)\n  ]);\n\n  for (let i = 0; i < horizontalTiles; i++) {\n    for (let j = 0; j < verticalTiles; j++) {\n      const index = j * horizontalTiles + i;\n      const randomIndex = randoms[index];\n      const id = index + 1;\n      const tile = {\n        id,\n        iFinal: i,\n        jFinal: j,\n        i: randomIndex % horizontalTiles,\n        j: Math.floor(randomIndex / horizontalTiles),\n        color: interpolate({\n          topLeft,\n          topRight,\n          bottomLeft,\n          bottomRight,\n          x: i,\n          xTotal: horizontalTiles,\n          y: j,\n          yTotal: verticalTiles\n        })\n      };\n\n      tiles.push({\n        ...tile,\n        locked: lockedPositions.some(coord => coord[0] === i && coord[1] === j)\n      });\n    }\n  }\n\n  return lockedPositions.reduce((newTiles, coord) => {\n    const tileInPosition = newTiles.find(\n      tile => tile.i === coord[0] && tile.j === coord[1]\n    );\n    const correctTile = newTiles.find(\n      tile => tile.iFinal === coord[0] && tile.jFinal === coord[1]\n    );\n    return tileInPosition.id === correctTile.id\n      ? newTiles\n      : swapTiles({\n          tiles: newTiles,\n          id1: tileInPosition.id,\n          id2: correctTile.id\n        });\n  }, tiles);\n};\n\nconst findTile = ({ x, y, tiles, tileWidth, tileHeight }) => {\n  const i = Math.floor(x / tileWidth);\n  const j = Math.floor(y / tileHeight);\n\n  return tiles.find(tile => tile.i === i && tile.j === j);\n};\n\nconst swapTiles = ({ tiles, id1, id2 }) => {\n  const tile1 = tiles.find(tile => tile.id === id1);\n  const tile2 = tiles.find(tile => tile.id === id2);\n  return tiles.map(tile =>\n    tile.id === id1\n      ? { ...tile1, i: tile2.i, j: tile2.j }\n      : tile.id === id2\n      ? { ...tile2, i: tile1.i, j: tile1.j }\n      : tile\n  );\n};\n\nconst lockTiles = ({ tiles }) =>\n  tiles.map(tile => (isCorrect(tile) ? { ...tile, locked: true } : tile));\n\nconst checkWin = ({ tiles }) => tiles.every(isCorrect);\n\nconst Game = ({\n  height,\n  mode,\n  hasWon,\n  horizontalTiles,\n  showMistakes,\n  verticalTiles,\n  isResizing,\n  onResetResizing,\n  onWin\n}) => {\n  const containerRef = useRef(null);\n  const [boardDimensions, setBoardDimensions] = useState(null);\n  const [tiles, setTiles] = useState(null);\n  const [activeTileId, setActiveTileId] = useState(null);\n  const [lastTouchedTileId, setLastTouchedTileId] = useState(null);\n  const [tileOffset, setTileOffset] = useState(null);\n  const [startPosition, setStartPosition] = useState(null);\n  const [hasDragged, setHasDragged] = useState(false);\n  const [selectedTileId, setSelectedTileId] = useState(null);\n  const [dragPosition, setDragPosition] = useState(null);\n  const tileWidth =\n    boardDimensions && Math.round(boardDimensions.width / horizontalTiles);\n  const tileHeight =\n    boardDimensions && Math.round(boardDimensions.height / verticalTiles);\n\n  useLayoutEffect(() => {\n    setTiles(\n      mode === \"ZEN\"\n        ? getInitialZenTiles({ horizontalTiles, verticalTiles })\n        : getInitialPuzzleTiles({ horizontalTiles, verticalTiles })\n    );\n\n    const calculateDimensions = () => {\n      const {\n        width,\n        height,\n        top\n      } = containerRef.current.getBoundingClientRect();\n      setBoardDimensions({ width, height, top });\n    };\n    calculateDimensions();\n    window.addEventListener(\"resize\", calculateDimensions);\n    return () => {\n      window.removeEventListener(\"resize\", calculateDimensions);\n    };\n  }, []);\n\n  const handleMouseDown = ({ id, x, y }) => {\n    const tile = tiles.find(tile => tile.id === id);\n\n    if (tile.locked) {\n      return;\n    }\n\n    if (isResizing) {\n      onResetResizing();\n    }\n\n    setHasDragged(false);\n    setStartPosition({ x, y });\n\n    const tileOffset = {\n      x: x - tile.i * tileWidth,\n      y: y - tile.j * tileHeight\n    };\n    setActiveTileId(id);\n    setTileOffset(tileOffset);\n    setDragPosition({\n      x: clamp(x - tileOffset.x, 0, (horizontalTiles - 1) * tileWidth),\n      y: clamp(y - tileOffset.y, 0, (verticalTiles - 1) * tileHeight)\n    });\n  };\n\n  const handleMouseMove = ({ id, x, y }) => {\n    if (!activeTileId) {\n      return;\n    }\n\n    if (\n      !hasDragged &&\n      (startPosition.x - x) ** 2 + (startPosition.y - y) ** 2 >= 4\n    ) {\n      setSelectedTileId(null);\n      setHasDragged(true);\n    }\n\n    setDragPosition({\n      x: clamp(x - tileOffset.x, 0, (horizontalTiles - 1) * tileWidth),\n      y: clamp(y - tileOffset.y, 0, (verticalTiles - 1) * tileHeight)\n    });\n    const overTile = findTile({\n      x,\n      y: y - boardDimensions.top,\n      tiles,\n      tileWidth,\n      tileHeight\n    });\n\n    if (overTile && overTile.id !== activeTileId && !overTile.locked) {\n      setTiles(swapTiles({ tiles, id1: activeTileId, id2: overTile.id }));\n    }\n  };\n\n  const handleMouseUp = () => {\n    setLastTouchedTileId(activeTileId);\n    let newTiles = tiles;\n\n    if (!hasDragged) {\n      if (selectedTileId && activeTileId) {\n        newTiles = swapTiles({\n          tiles: newTiles,\n          id1: selectedTileId,\n          id2: activeTileId\n        });\n        setSelectedTileId(null);\n      } else {\n        setSelectedTileId(activeTileId);\n      }\n    }\n\n    setActiveTileId(null);\n    setTileOffset(null);\n    setDragPosition(null);\n\n    if (mode === \"ZEN\") {\n      newTiles = lockTiles({ tiles: newTiles });\n    }\n    if (checkWin({ tiles: newTiles })) {\n      onWin();\n    }\n\n    setTiles(newTiles);\n  };\n\n  return (\n    <Container\n      ref={containerRef}\n      style={{ height }}\n      onTouchMove={evt => {\n        evt.preventDefault();\n        handleMouseMove({\n          x: evt.touches[0].clientX,\n          y: evt.touches[0].clientY\n        });\n      }}\n      onMouseMove={evt => {\n        handleMouseMove({ x: evt.clientX, y: evt.clientY });\n      }}\n      onTouchEnd={evt => {\n        evt.preventDefault();\n        handleMouseUp();\n      }}\n      onMouseUp={handleMouseUp}\n    >\n      {tiles &&\n        tiles.map(tile => {\n          const { id, i, j, color, locked } = tile;\n          const active = activeTileId === id;\n          const left = active ? dragPosition.x : i * tileWidth;\n          const top = active ? dragPosition.y : j * tileHeight;\n\n          return (\n            <Tile\n              key={id}\n              lastTouched={lastTouchedTileId === id}\n              active={active}\n              hasWon={hasWon}\n              locked={locked}\n              selected={selectedTileId === id}\n              showMistake={showMistakes && !isCorrect(tile)}\n              id={id}\n              isResizing={isResizing}\n              left={left}\n              top={top}\n              color={color}\n              width={tileWidth}\n              height={tileHeight}\n              onMouseDown={handleMouseDown}\n              onMouseMove={handleMouseMove}\n            />\n          );\n        })}\n    </Container>\n  );\n};\n\nexport default Game;\n","import styled from \"styled-components\";\n\nconst FONT_SIZES = {\n  1: 32,\n  2: 24\n};\n\nconst LINE_HEIGHTS = {\n  1: 40,\n  2: 32\n};\n\nconst Title = styled.div`\n  font-size: ${props => FONT_SIZES[props.level || 1]}px;\n  line-height: ${props => LINE_HEIGHTS[props.level || 1]}px;\n  margin-bottom: 15px;\n`;\n\nexport default Title;\n","import styled from \"styled-components\";\n\nconst Button = styled.div`\n  display: inline-block;\n  position: relative;\n  border: 0;\n  font-size: 18px;\n  cursor: pointer;\n  padding: 10px 15px;\n  background-color: #fff;\n  color: #345069;\n  border-radius: 3px;\n  user-select: none;\n`;\n\nexport const OutlineButton = styled(Button)`\n  color: #fff;\n  background-color: #1a88b6;\n`;\n\nexport default Button;","import React from \"react\";\nimport styled from \"styled-components\";\nimport Title from \"./Title\";\nimport Button from \"./Button\";\nimport { Z_INDICES } from \"../constants\";\n\nconst Overlay = styled.div`\n  position: absolute;\n  left: 0;\n  right: 0;\n  top: 0;\n  bottom: 0;\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  justify-content: center;\n  z-index: ${Z_INDICES.winOverlay};\n`;\n\nconst WinOverlay = ({ onNewGame }) => (\n  <Overlay>\n    <Title>Nice Work</Title>\n    <Button onClick={onNewGame}>Play Again</Button>\n  </Overlay>\n);\n\nexport default WinOverlay;\n","import React, { Fragment, useLayoutEffect, useRef, useState } from \"react\";\nimport styled from \"styled-components\";\nimport random from \"lodash/random\";\nimport Header from \"./Header\";\nimport Game from \"./Game\";\nimport WinOverlay from \"./WinOverlay\";\nimport { COLORS } from \"../constants\";\n\nconst HEADER_HEIGHT = 40;\nconst MINIMUM_HORIZONTAL_PADDING = 4;\nconst MINIMUM_BOTTOM_PADDING = 16;\n\nconst Container = styled.div`\n  height: 100%;\n  overflow: hidden;\n  background-color: ${COLORS.appBackground};\n  color: #fff;\n  touch-action: none;\n`;\n\nconst GameContainer = styled.div`\n  position: relative;\n`;\n\nconst Version = styled.div`\n  font-size: 8px;\n  line-height: 12px;\n  text-align: center;\n  color: #888;\n`;\n\nconst LOCAL_STORAGE_MODE_KEY = \"__zen-hues-mode__\";\n\nconst useMode = () => {\n  const [mode, setMode] = useState(\n    localStorage.getItem(LOCAL_STORAGE_MODE_KEY) || \"ZEN\"\n  );\n  const setAndSaveMode = modeToSave => {\n    setMode(modeToSave);\n    localStorage.setItem(LOCAL_STORAGE_MODE_KEY, modeToSave);\n  };\n  return [mode, setAndSaveMode];\n};\n\nconst App = () => {\n  const containerRef = useRef(null);\n  const [containerDimensions, setContainerDimensions] = useState(null);\n  const [tileCounts, setTileCounts] = useState({\n    horizontal: random(4, 7),\n    vertical: random(7, 10)\n  });\n  const [gameId, setGameId] = useState(1);\n  const [mode, setMode] = useMode();\n  const [hasWon, setHasWon] = useState(false);\n  const [showMistakes, setShowMistakes] = useState(false);\n  const [isResizing, setIsResizing] = useState(false);\n\n  const gameHeight =\n    containerDimensions &&\n    Math.floor(\n      (containerDimensions.height - HEADER_HEIGHT - MINIMUM_BOTTOM_PADDING) /\n        tileCounts.vertical\n    ) * tileCounts.vertical;\n  const gameWidth =\n    containerDimensions &&\n    Math.floor(\n      (containerDimensions.width - 2 * MINIMUM_HORIZONTAL_PADDING) /\n        tileCounts.horizontal\n    ) * tileCounts.horizontal;\n  const horizontalPadding =\n    containerDimensions &&\n    Math.round((containerDimensions.width - gameWidth) / 2);\n\n  useLayoutEffect(() => {\n    const handleResize = () => {\n      setIsResizing(true);\n      const { width, height } = containerRef.current.getBoundingClientRect();\n      setContainerDimensions({ height, width });\n    };\n    handleResize();\n    window.addEventListener(\"resize\", handleResize);\n    return () => {\n      window.removeEventListener(\"resize\", handleResize);\n    };\n  }, []);\n\n  const handleNewGame = ({ mode }) => {\n    setMode(mode);\n    setTileCounts({\n      horizontal: random(4, 8),\n      vertical: random(6, 10)\n    });\n    setHasWon(false);\n    setGameId(gameId + 1);\n    setShowMistakes(false);\n  };\n\n  return (\n    <Container\n      ref={containerRef}\n      onTouchStart={evt => {\n        evt.preventDefault();\n      }}\n    >\n      {containerDimensions && (\n        <Fragment>\n          <Header\n            hasWon={hasWon}\n            height={HEADER_HEIGHT}\n            mode={mode}\n            showMistakes={showMistakes}\n            onNewGame={handleNewGame}\n            onToggleShowMistakes={() => {\n              setShowMistakes(!showMistakes);\n            }}\n          />\n          <GameContainer style={{ padding: `2px ${horizontalPadding}px` }}>\n            <Game\n              key={gameId}\n              mode={mode}\n              isResizing={isResizing}\n              hasWon={hasWon}\n              showMistakes={showMistakes}\n              horizontalTiles={tileCounts.horizontal}\n              verticalTiles={tileCounts.vertical}\n              height={gameHeight}\n              width={gameWidth}\n              onResetResizing={() => {\n                setIsResizing(false);\n              }}\n              onWin={() => {\n                setHasWon(true);\n              }}\n            />\n            {hasWon && (\n              <WinOverlay\n                onNewGame={() => {\n                  handleNewGame({ mode });\n                }}\n              />\n            )}\n          </GameContainer>\n          <Version>v 1.2.2</Version>\n        </Fragment>\n      )}\n    </Container>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport { render } from \"react-dom\";\nimport registerServiceWorker from \"./registerServiceWorker\";\nimport \"./styles/reset.css\";\nimport \"./styles/styles.css\";\nimport App from \"./components/App\";\n\nif (!Object.entries) {\n  Object.entries = function( obj ){\n    var ownProps = Object.keys( obj ),\n      i = ownProps.length,\n      resArray = new Array(i); // preallocate the Array\n    while (i--)\n      resArray[i] = [ownProps[i], obj[ownProps[i]]];\n\n    return resArray;\n  };\n}\n\nrender(<App />, document.getElementById(\"root\"));\n\nregisterServiceWorker();\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n      navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n          registration.onupdatefound = () => {\n            const installingWorker = registration.installing;\n            installingWorker.onstatechange = () => {\n              if (installingWorker.state === \"installed\") {\n                if (navigator.serviceWorker.controller) {\n                  // At this point, the old content will have been purged and\n                  // the fresh content will have been added to the cache.\n                  // It's the perfect time to display a \"New content is\n                  // available; please refresh.\" message in your web app.\n                  console.log(\"New content is available; please refresh.\");\n                } else {\n                  // At this point, everything has been precached.\n                  // It's the perfect time to display a\n                  // \"Content is cached for offline use.\" message.\n                  console.log(\"Content is cached for offline use.\");\n                }\n              }\n            };\n          };\n        })\n        .catch(error => {\n          console.error(\"Error during service worker registration:\", error);\n        });\n    });\n  }\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n"],"sourceRoot":""}